server:
  port: 8090

eureka:
  client:
    service-url:
      #单机版
      defaultZone: http://eureka1:8761/eureka/
      #集群模式
#      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/,http://eureka3:8763/eureka/

spring:
  cloud:
    gateway:
      discovery:
        locator:
          #是否与服务发现组件结合，通过serviceId转发到具体的实例。默认为false,设为true开始根据serviceId创建路由功能
          enabled: false
          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了）
          lower-case-service-id: true
      routes:
        #自定义 全局唯一路由ID
        - id: ribbon-service
          #uri以lb://开头（lb代表从注册中心获取服务），后面接的就是你需要转发到的服务名称
          uri: lb://RIBBON-SERVICE
          #谓词
          predicates:
            #匹配路由   http://ip:port/ribbon/**  的请求
            - Path=/ribbon/**
          #过滤器
          filters:
            #剥离请求路径 例如 http://ip:port/ribbon/RIBBON-SERVICE/getRibbonBalancer   ==>  http://ip:port/RIBBON-SERVICE/getRibbonBalancer
            - StripPrefix=1
            #熔断降级
            - name: Hystrix
              args:
                name: authHystrixCommand
                fallbackUri: 'forward:/hystrixTimeout'
            #限流
            - name: RequestRateLimiter
              args:
                # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                key-resolver: '#{@apiKeyResolver}'
                # 每秒最大访问次数  令牌桶每秒填充平均速率
                redis-rate-limiter.replenishRate: 1
                # 令牌桶最大容量
                redis-rate-limiter.burstCapacity: 2
  application:
    name: gateway-service
  redis:
    host: 192.168.1.6
    port: 6379
    database: 0
    password: 123456

# hystrix 信号量隔离，3秒后自动超时
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 1000
    authHystrixCommand:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 5000

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

#日志配置
logging:
  config: classpath:logback-boot.xml
