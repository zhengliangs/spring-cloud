spring:
  cloud:
    gateway:
      discovery:
        locator:
          #是否与服务发现组件结合，通过serviceId转发到具体的实例。默认为false,设为true开始根据serviceId创建路由功能
          enabled: false
          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了）
          lower-case-service-id: true
      routes:
        #自定义 全局唯一路由ID
        - id: feign-service
          #uri以lb://开头（lb代表从注册中心获取服务），后面接的就是你需要转发到的服务名称
          uri: lb://RIBBON-SERVICE
          #谓词
          predicates:
            #匹配路由   http://ip:port/feign/**  的请求
            - Path=/ribbon/**
          #过滤器
          filters:
            #剥离请求路径 例如 http://ip:port/feign/FEIGN-SERVICE/hello   ==>  http://ip:port/FEIGN-SERVICE/hello
            - StripPrefix=1
            #熔断降级
            - name: Hystrix
              args:
                name: ribbonHystrixCommand
                fallbackUri: 'forward:/fallbackCommand'
            #限流
            - name: RequestRateLimiter
              args:
                # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                key-resolver: '#{@ipKeyResolver}'
                # 每秒最大访问次数  令牌桶每秒填充平均速率
                redis-rate-limiter.replenishRate: 5
                # 令牌桶最大容量
                redis-rate-limiter.burstCapacity: 10
            #重试
            - name: Retry
              args:
                #重试次数，默认值是3次
                retries: 3
                ##状态码配置，和series不同的是这边是具体状态码的配置，取值请参考：org.springframework.http.HttpStatus
                statuses:
                  - BAD_GATEWAY
                #状态码配置（分段），符合的某段状态码才会进行重试逻辑，默认值是SERVER_ERROR，值是5，也就是5XX(5开头的状态码)，共有5个值：
                series:
                  - SERVER_ERROR
                #定哪些方法的请求需要进行重试逻辑，默认值是GET方法，取值如下：
                methods:
                  - GET
  #                backoff:
  #                  firstBackoff: 10ms
  #                  maxBackoff: 50ms
  #                  factor: 2
  #                  basedOnPreviousValue: false